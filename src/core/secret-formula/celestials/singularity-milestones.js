// Used for UI purposes to give different theming for different kinds of upgrades
export const LAITELA_UPGRADE_DIRECTION = {
  SELF_BOOST: 0,
  BOOSTS_MAIN: 1,
  BOOSTS_LAITELA: 2
};

export const singularityMilestones = {
  // Infinite
  continuumMult: {
    start: 1,
    repeat: 125,
    increaseThreshold: 20,
    limit: Infinity,
    description: "连续统百分比倍率",
    effect: completions => completions * 0.03,
    effectFormat: x => formatX(1 + x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,
  },
  darkMatterMult: {
    start: 2,
    repeat: 20,
    increaseThreshold: 30,
    limit: Infinity,
    description: "暗物质产量倍率",
    effect: completions => Math.pow(1.5, completions),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  darkEnergyMult: {
    start: 3,
    repeat: 120,
    increaseThreshold: 10,
    limit: Infinity,
    description: "暗能量产量倍率",
    effect: completions => Math.pow(2, completions),
    effectFormat: x => formatX(x, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  darkDimensionCostReduction: {
    start: 4,
    repeat: 40,
    increaseThreshold: 25,
    limit: Infinity,
    description: "暗物质维度升级更便宜",
    effect: completions => Math.pow(0.4, completions),
    effectFormat: x => `/ ${format(1 / x, 2, 2)}`,
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  singularityMult: {
    id: 5,
    start: 50,
    repeat: 3000,
    increaseThreshold: 5,
    limit: Infinity,
    description: "奇点获取量",
    effect: completions => Math.pow(2, completions),
    effectFormat: x => formatX(x, 2, 0),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  darkDimensionIntervalReduction: {
    start: 10,
    repeat: 100,
    increaseThreshold: 20,
    limit: Infinity,
    description: "暗物质维度间隔减少",
    effect: completions => Math.pow(0.6, completions),
    effectFormat: x => `/ ${format(1 / x, 2, 2)}`,
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  improvedAscensionDM: {
    start: 200000,
    repeat: 4000,
    increaseThreshold: 15,
    limit: Infinity,
    description: "飞升提升暗物质产量",
    effect: completions => 100 * completions,
    effectFormat: x => formatX(POWER_DM_PER_ASCENSION + x, 1, 0),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  // Limited
  ascensionIntervalScaling: {
    start: 1.2e5,
    repeat: 2400,
    limit: 8,
    description: "暗物质维度飞升减少间隔的增加",
    effect: completions => 1200 - 50 * completions,
    effectFormat: x => `×${formatInt(x)}`,
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  autoCondense: {
    start: 8,
    repeat: 80,
    limit: 8,
    description: "在超过上限的阈值时自动凝聚奇点",
    effect: completions => [Infinity, 1.3, 1.22, 1.15, 1.1, 1.06, 1.03, 1.01, 1][completions],
    effectFormat: x => `上限 ${formatX(x, 2, 2)}`,
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  darkDimensionAutobuyers: {
    start: 30,
    repeat: 170,
    limit: 4,
    description: "自动购买暗物质维度",
    effect: completions => completions,
    effectFormat: x => ((x === 0) ? "无法自动购买" : `自动购买到第 ${x} 暗物质维度`),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  ascensionAutobuyers: {
    start: 1e8,
    repeat: 140,
    limit: 4,
    description: "暗物质维度自动飞升",
    effect: completions => completions,
    effectFormat: x => ((x === 0) ? "无法自动购买" : `自动飞升到第 ${x} 暗物质维度`),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  darkAutobuyerSpeed: {
    start: 45,
    repeat: 650,
    limit: 8,
    description: "所有暗物质维度自动购买速度",
    effect: completions => [30, 20, 15, 10, 5, 3, 2, 1, 0][completions],
    effectFormat: x => (x === 0 ? "立即" : `${formatInt(x)}秒`),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  realityDEMultiplier: {
    start: 1500,
    repeat: 10000,
    limit: 6,
    description: "基于莱特拉内禁用维度数量的暗能量倍率",
    effect: completions => Math.pow(1 + 0.05 * completions, Laitela.difficultyTier),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  improvedSingularityCap: {
    start: 150,
    repeat: 10000,
    limit: 4,
    description: "每次增加上限提升奇点获取",
    effect: completions => 11 + completions,
    effectFormat: x => formatX(x),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  intervalCostScalingReduction: {
    start: 130000,
    repeat: 50000,
    limit: 5,
    description: "暗物质维度间隔的价格增长减缓",
    effect: completions => 1 - 0.03 * completions,
    effectFormat: x => formatPow(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  // Unique
  darkFromTesseracts: {
    start: 80,
    repeat: 0,
    limit: 1,
    description: "超立方体提升暗物质和暗能量的产量",
    effect: () => Math.pow(1.1, Tesseracts.effectiveCount),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,
  },
  multFromInfinitied: {
    start: 3000,
    repeat: 0,
    limit: 1,
    description: "无限次数提升暗物质和暗能量的产量",
    effect: () => Math.clampMin(Currency.infinitiesTotal.value.pLog10() / 1000, 1),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,
  },
  dilatedTimeFromSingularities: {
    start: 8e4,
    repeat: 0,
    limit: 1,
    description: "基于奇点数量，提升可重复购买的膨胀时间倍增升级",
    // Note that at ~2.15x this causes a runaway purely because of cost scaling
    effect: () => 1 + Math.clampMax(Math.log10(Currency.singularities.value) / 100, 0.35),
    effectFormat: x => `${formatX(2)} ➜ ${formatX(2 * Math.clampMin(x, 1), 2, 2)}`,
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,
  },
  darkFromGlyphLevel: {
    start: 3e6,
    repeat: 0,
    limit: 1,
    description: "基于最高符文等级提升暗物质和暗能量的产量",
    effect: () => Math.pow(Math.clampMin((player.records.bestReality.glyphLevel - 15000) / 2000, 1), 0.5),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,
  },
  gamespeedFromSingularities: {
    start: 8e7,
    repeat: 0,
    limit: 1,
    description: "奇点提升游戏速度",
    effect: () => Math.clampMin(Math.pow(Math.log10(Currency.singularities.value), 3), 1),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,
  },
  darkFromTheorems: {
    start: 3e9,
    repeat: 0,
    limit: 1,
    description: "时间之理提升暗物质和暗能量的产量",
    effect: () => Math.sqrt(Math.clampMin((Currency.timeTheorems.value.log10() - 1000) / 50, 1)),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,
  },
  dim4Generation: {
    start: 5e11,
    repeat: 0,
    limit: 1,
    description: "湮灭倍率在湮灭可用时生成第四暗物质维度",
    effect: () => Laitela.darkMatterMult,
    effectFormat: x => `${format(x, 2, 1)}/秒`,
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  darkFromDM4: {
    start: 5e12,
    repeat: 0,
    limit: 1,
    description: "基于第四暗物质维度数量提升暗物质和暗能量的产量",
    effect: () => Math.clampMin(DarkMatterDimension(4).amount.pow(0.03).toNumber(), 1),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  annihilationAutobuyer: {
    start: 4e18,
    repeat: 0,
    limit: 1,
    description: "解锁自动湮灭",
    effect: completions => completions,
    effectFormat: x => (x === 1 ? "已解锁" : "已锁定"),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,
  },
  theoremPowerFromSingularities: {
    start: 3e21,
    repeat: 0,
    limit: 1,
    description: "奇点给时间之理获取一个指数效果",
    effect: () => 1 + Math.log10(Currency.singularities.value + 1) / 70,
    effectFormat: x => formatPow(x, 2, 3),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,
  },
  darkFromGamespeed: {
    start: 8e22,
    repeat: 0,
    limit: 1,
    description: "游戏速度提升暗物质和暗能量的产量",
    effect: () => Math.clampMin(Math.log10(getGameSpeedupFactor() / 1e120) / 40, 1),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,
  },
  glyphLevelFromSingularities: {
    start: 3e24,
    repeat: 0,
    limit: 1,
    description: "奇点提升不稳定前的符文等级",
    effect: () => 1 + Math.clampMin((Math.log10(Currency.singularities.value) - 20) / 30, 0),
    effectFormat: x => formatX(Math.clampMin(x, 1), 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,
  },
  darkFromDilatedTime: {
    start: 8e33,
    repeat: 0,
    limit: 1,
    description: "膨胀时间提升暗物质产量",
    effect: () => Math.pow(1.6, Decimal.log10(Currency.dilatedTime.value.plus(1)) / 1000),
    effectFormat: x => formatX(x, 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,
  },
  infinitiedPow: {
    start: 3e38,
    repeat: 0,
    limit: 1,
    description: "无限次数基于奇点获得指数加成",
    effect: () => 1 + Math.log10(Currency.singularities.value + 1) / 300,
    effectFormat: x => formatPow(x, 2, 3),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,
  },
  tesseractMultFromSingularities: {
    start: 2.5e45,
    repeat: 0,
    limit: 1,
    description: "奇点增加有效的超立方体数量",
    effect: () => 1 + Math.log10(Currency.singularities.value) / 80,
    effectFormat: x => formatX(Math.clampMin(x, 1), 2, 2),
    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,
  }
};
